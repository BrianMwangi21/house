What is the `operational excellence` pillar?
The operational excellence pillar includes operational practices and procedures used to manage production workloads.
    This includes how planned changes are executed, as well as responses to unexpected operational events. Change
    execution and responses should be automated. All processes and procedures of operational excellence should be
    documented, tested, and regularly reviewed.

What 6 principles comprise `operational excellence` design?
(1) Perform operations with code; (2) Align operations processes to business objectives; (3) Make regular, small, 
    incremental changes; (4) Test for responses to unexpected events; (5) Learn from operational events and failures;
    (6) Keep operations procedures current

What are the 3 best practice areas of `operational excellence` in the cloud?
(1) Preparation; (2) Operation; (3) Response

What is a Runbook?
Operations guidance that operations teams can refer to so they can perform normal daily tasks

What is a Playbook?
Guidance for responding to unexpected operational events. Playbooks should include response plans, as well as 
    escalation paths and stakeholder notifications.

What is an Operations checklist?
Operations checklists will ensure that workloads are ready for production operation, and prevent unintentional 
    production promotion without effective preparation.

What 4 services/features that can be used to achieve `operational excellence`? How?
Cloud Formation, Autoscaling, AWS Config, Tagging; `CloudFormation` can be used to ensure that environments contain 
    all required resources when deployed in production, and that the configuration of the environment is based on tested 
    best practices, which reduces the opportunity for human error. Implementing `Auto Scaling`, or other automated 
    scaling mechanisms, will allow workloads to automatically respond when business-related events affect operational 
    needs. Services like `AWS Config` with the AWS Config rules feature create mechanisms to automatically track and 
    respond to changes in your AWS workloads and environments. It is also important to use features like `tagging` 
    to make sure all resources in a workload can be easily identified when needed during operations and responses.

What are 5 types of documentation?
(1) Application designs; (2) Environment configurations; (3) Resource configurations; (4) Response plans;
    (5) Mitigation plans

Why must you insure that documentation does not become stale or out of date as procedures change?
If documentation is not updated and tested regularly, it will not be useful when unexpected operational events 
    occur.

What happens if resources are not documented?
If resources are not documented, when operational events occur, determining how to respond will be more difficult 
    while the correct resources are identified.

As an architect, what 2 questions should you ask to insure effective `preparation`?
(1) What best practices for cloud operations are you using? (2) How are you doing configuration management for 
    your workload?

What are the two characteristics that should define `operations`?
Standardized and manageable

What are the 4 focuses to insure effective `operations`?
(1) Automation; (2) Small frequent changes; (3) Regular quality assurance testing; (4) Defined mechanisms to 
    track, audit, roll back, and review changes

What should `operational change` not be? (3)
(1) Large and infrequent; (2) Require scheduled downtime; (3) Require manual execution

How do you ensure continous operations?
A wide range of logs and metrics that are based on key operational indicators for a workload should be collected 
    and reviewed to ensure continuous operations.

What is an example of manageable operational change?
Microsoft Windows 10 is an example of manageable operational change. Prior to its release, new versions of Windows 
    were large. For example, remember the fun of going from Windows 3.x to Windows 95. From Windows 10 onward, Microsoft 
    simply pushes out small incremental changes.

What is a `CI/CD Pipeline`? What are its 4 component parts?
Continuous Integration / Continuous Deployment; (1) Source Code Repository; (2) Build Systems; 
    (3) Deployment; (4) Testing Automation

What should release management processes be? (4)
(1) Tested (manual or automated); (2) Based on small incremental changes; (3) Based on tracked versions;
    (4) In the face of `operational issues`, able to be reverted without causing `operational impact`

Routine operations, as well as responses to unplanned events, should be ____.
Automated.

With regard to Release Management, where should manual processes be avoided? (4)
(1) Deployment; (2) Release Management; (3) Changes; (4) Rollbacks

What will prevent continuity of operations? (2)
(1) Failing to have a rollback plan; (2) The ability to mitigate failure impacts

Why should monitoring be aligned to business needs?
So that the responses are effective at maintaining business continuity

Monitoring that is ad hoc and not centralized, with responses that are manual, will cause ____.
More impact to operations during unexpected events.

Responses to unexpected operational events should be ____.
Automated.

Hierarchical escalation should be ____, and escalate priority should result in ____ ____.
Automated; Stakeholder notifications

As an architect, what 2 questions should you ask to insure effective operational `responses`?
(1) How do you respond to unplanned operational events? (2) How is escalation managed when responding to 
    unplanned operational events?

What are the key services used for `Preparation`?
Management > Config; Management > Service Catalog; Application > SQS

What are the key services used for `Operations`?
Developer Tools > CodeCommit; Developer Tools > CodeDeploy; Developer Tools > CodePipeline; 
    Management Tools > CloudTrail

What are the key services used for `Responses`?
Management Tools > CloudWatch
